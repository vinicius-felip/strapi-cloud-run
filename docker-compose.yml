services:
  strapi:
    container_name: strapi
    build:
      context: .
      target: dev
    image: strapi-cloud-run:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapi-db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/usr/src/app/config
      - ./src:/usr/src/app/src
      - ./.env:/usr/src/app/.env
      - ./package.json:/usr/src/app/package.json
      - ./yarn.lock:/usr/src/app/yarn.lock
    ports:
      - 1337:1337
      - 9229:9229
    networks:
      - strapi
    depends_on:
      - strapi-db

  strapi-db:
    container_name: strapi-db.postgres
    image: postgres:14-alpine
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./.tmp/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - strapi

volumes:
  strapi-data:


networks:
  strapi:
    name: Strapi
    driver: bridge
